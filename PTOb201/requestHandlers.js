/*** @author admin*///HTTP Request Handlerfunction echoHandler(request, response) {	response.contentType = 'application/json';	return JSON.stringify(request);}function fullCalendarDispatcher(request, response) {	var myResponseString;		switch (request.url) {		case "/calendarData/david":			myResponseString = "David R.";			break;					case "/calendarData/juergan":			myResponseString = "Juergan F.";			break;					default:			myResponseString = request.url;	}		//response.contentType = 'application/json';	response.contentType = 'text/html';	//return JSON.stringify(myResponseString);	return myResponseString;}function ptoApproval(request, response) {	if (loginByPassword("approvalDaemon", "June2012")) {		var params = request.rawURL.split("/"),			ptoID = params[2],			approvePassword =params[3],			approveID =params[4],			approvalString = params[5],			ptoToApprove = ds.PTO_Request(ptoID);								response.contentType = 'text/html';				//authenticate this request to approve.		var ha1 = directory.computeHA1(approveID, approvePassword);		if (ha1 === ptoToApprove.approveHA1Key) {			ptoToApprove.status = "approved";			ptoToApprove.save();			return "PTO: " + ptoID + " approved.";		} else {			return "Could not authenticate your request to approve PTO: " + ptoID + ".";		}		//request.rawURL				//return "Request approved";		//return request.rawURL;			} 				/*	var theEmailWorker = new SharedWorker("sharedWorkers/emailDaemon.js", "emailDaemon");	var thePort = theEmailWorker.port; // MessagePort to communicate with the email shared worker.		thePort.postMessage({what: 'requestTimeOff',			requestorID : this.requestor.ID,			firstDayOff: formatDate(this.firstDayOff),			lastDayOff: formatDate(this.lastDayOff),			requestLineItems: requestLineItemsArray,			notes: this.emailText			//requestLineItems: [{name: "dave"}, {name: "tom"}, {name: "bill"}]	});					thePort.postMessage({what: 'ptoApproval'});	*/	}