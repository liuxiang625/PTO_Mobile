/*** @author admin*//*function makeid(){    var text = "";    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";    for( var i=0; i < 5; i++ )        text += possible.charAt(Math.floor(Math.random() * possible.length));    return text;}var password = makeid();*///httpServer.hostName//var before = ds.Student.length;//all in one line//var aNewStudent = new ds.Student({firstName: 'Cindy', lastName: 'BlueXXX'}).save();//var after = ds.Student.length;//'Students before: ' + before + '   after: ' + after;//"test"/*var username = 'wakandaPTO'; // enter a valid account herevar password = 'Wakanda2013';  // enter a valid password herevar address = 'smtp.gmail.com';var port = 465;  // SSL portvar mail = require('waf-mail/mail');var recip = "drobbins@4d.com"; var message = new mail.Mail();message.setBodyType("text/html");message.from= username + '@gmail.com';message.to=recip;message.subject = "Test in HTML in a single call"//message.setBodyAsHTML('<html><b><i>Hello world in bold!</i></b><br>This is normal text.</html>'); // that's allmessage.setBody('<html><b><i>Hello world in bold!</i></b><br>This is normal text.</html>'); // that's allmessage.send(address, port , true, username, password);*/if (loginByPassword("admin", "admin")) {			/*	var lineItems = ds.RequestLineItem.all();	var numberOfLineItems = lineItems.length;	var printVar = "";	for (var i = 0; i < numberOfLineItems; i++) {		var ptoID = lineItems[i].ptoRequest.ID		//load pto		var pto = ds.PTO_Request(ptoID);		var userID = pto.requestor.ID;		var user = ds.User(userID);		printVar += user.fullName + " : ";	}		printVar	*/		//ptoCollection = ds.PTO_Request.all();	//ptoCollection	//var users = ds.User.all();	//users			//var lineItems = ds.RequestLineItem.all();	//lineItems		//var names = lineItems.toArray("ptoRequest.requestor.ID");	//names	//lineItems		/*	var printVar = "";	lineItems.forEach(function(lineItem) {		if (typeof lineItem.ptoRequest.requestor !== "undefined") {			printVar += lineItem.compensation + " : " + lineItem.hoursRequested + " : " + lineItem.ptoRequest.requestor.fullName; 		} else {			printVar += lineItem.compensation + " : " + lineItem.hoursRequested ; 		} 			});	printVar	*/			/**/				//var notes = ds.Note.all();	//notes		//ds.PTO_Request.all()		//var message = "";//	var thePTO = ds.PTO_Request(17);//	var lineItems = thePTO.requestLineItemCollection;//	//	lineItems	/*	thePTO.requestLineItemCollection.forEach(		function(lineItem) {			//lineItem.hoursRequested + "\n";			message += "a";		}	);	*/			//message		//var userCollection = ds.User.all();	//userCollection		//var manager = ds.User.find("fullName = :1", "Billy Martin");	//manager		//var green = ds.User.find("fullName = :1", "Bryan Green");	//green.myManager = manager;	//green				//onePTO = ds.PTO_Request(30);	//onePTO.requestor.myManager.fullName		//"test"	//var david = ds.User.find("login = :1", "drobbins");	//david.email	//var someComp = ds.Compensation.all();	//someComp		//new ds.Compensation({name: 'Floating Day'}).save();	//new ds.Compensation({name: 'Paid Time Off'}).save();		//if (loginByPassword("wmays", "mays")) {		//var ptoHours = currentSession().storage.ptoHours;	//ptoHours			//var someHolidays = ds.Holiday.all();	//someHolidays		//var somePTOequestLineItems = ds.RequestLineItem.all();	//somePTOequestLineItems.length	//somePTOequestLineItems	//somePTOequestLineItems.remove();		//var somePTOs = ds.PTO_Request.all();	//somePTOs	//somePTOs.length	//somePTOs.remove()		//var someUsers = ds.User.all();	//someUsers	//someUsers.length	//someUsers.remove()}/*if (loginByPassword("addk", "add")) {	var myUserCollection = ds.User.query("myManager.login = :1", currentUser().name);	myUserCollection	} else {	"login failed"}*//*if (loginByPassword("drobbins", "robbins")) {	//var sessionRef = currentSession(); // Get session.	//var promoteToken = sessionRef.promoteWith("Administrator");		var somePTOs = ds.PTO_Request.all();	//somePTOs.toArray("requestorName, ID")	somePTOs	//var myText = currentUser().name;	//myText	} else {	"login failed"}*//*var entityPattern = {};for (var e in ds.dataClasses){ 	//cycle through all dataclasses	var theDataClass = ds.dataClasses[e];	if (theDataClass.getScope() == 'public') { //if the dataclass is public		entityPattern[e] = {modifyAttributes: {}, createAttributes: {}};		for (var a in theDataClass.attributes){			var theAttribute = theDataClass.attributes[a];			if (theAttribute.scope == 'public') { //if the attribute is public				var attKind = theAttribute.kind;				if ((attKind == 'storage') || (attKind == 'relatedEntity')) {					if (theAttribute.name != 'ID')						entityPattern[e].modifyAttributes[a] = theDataClass.attributes[a];					entityPattern[e].createAttributes[a] = theDataClass.attributes[a];				}			}		}	}}entityPattern*/